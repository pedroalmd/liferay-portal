@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		CommerceConfiguration.commerceStoreFrontSetUp();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	@description = "This is a test for COMMERCE-6017. CreateAnOptionForAllTheFieldType"
	@priority = "3"
	test CreateAnOptionForAllTheFieldType {
		property portal.acceptance = "false";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		AppBuilderAdmin.searchByItem(itemName = "ABS Sensor");

		Click(
			key_entryName = "ABS Sensor",
			locator1 = "CommerceEntry#TABLE_LIST_TITLE");

		CommerceEntry.gotoMenuTab(menuTab = "Options");
		var colorName = "Color_";
		var count = "0";

		for (var fieldType : list "Text,Single Selection,Multiple Selection,Date,Numeric,Boolean Question") {
			Type(
				key_title = "Add Options",
				locator1 = "CommerceEntry#ADD_RELATION_FIELD",
				value1 = "${colorName}${count}");

			Button.click(button = "Create New");

			Refresh();

			AssertElementPresent(
				key_entryName = "${colorName}${count}",
				locator1 = "CommerceNavigation#ENTRY_NAME");

			Click(
				key_index = "${colorName}${count}",
				locator1 = "WorkflowMetrics#SEARCH_FIELD_MAPPINGS_METRICS_INDEXES");

			SelectFrame.selectFrameNoLoading(locator1 = "CommerceEntry#IFRAME_SIDE_PANEL");

			Select(
				key_fieldLabel = "Field Type",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${fieldType}");

			Button.clickSave();

			Click(locator1 = "Icon#CLOSE");

			var count = ${count} + 1;

			Refresh();
		}
	}

	@description = "This is a test for COMMERCE-6019. EditAndRemoveAnOptionWithValues"
	@ignore = "true"
	@priority = "3"
	test EditAndRemoveAnOptionWithValues {
		property portal.acceptance = "false";

		// TODO COMMERCE-6019 EditAndRemoveAnOptionWithValues

	}

}